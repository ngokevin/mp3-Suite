Dependencies:
    youtube-dl
    ffmpeg
    libmp3lame codec (install from ffmpeg extras packages)

scrapeSite:
    Scrapes all youtube links from a webpage 
    Outputs the links to a flat file called Music (list of youtube links)
    If download and convert desired, call youtube2mp3.sh to batch download all
    My main usage for this was to scrape youtube links from reddit.com/r/listentothis and feed it into youtube2mp3 to download all the songs.

scrapeFile:
    Opens a file and scrapes all youtube links off of file and outputs link
    to a flat file called Music
    My main usage for this was to save a Youtuber's HTML page to download all of their songs

youtube2mp3:
    Converts youtube link to mp3 by calling youtube-dl and ffmpeg (dependencies) 
    Remember to first change the default download directory within the source
    Can have open a flat file with multiple youtube links for batch conversion

prestobot:
    My whole usage for this suite was to scrape reddit.com/r/listentothis everyday to populate my music library (automated piracy system). With prestobot, I can give back to the site. It tarballs
files downloaded today (by checking the last_modified), uploads it to Rapidshare via their API, and posts the Rapidshare links to Reddit via the Reddit API. It requires many parameters (rapidshare user/pw, reddit usr/pw, subreddit, song directory, path where all the other scripts are contained, fileserver/host prefix...)

Examples:
    python scrapeSite.py && ./youtube2mp3 Music
    python scrapeSite.py 'reddit.com/r/music' && ./youtube2mp3 Music
    python scrapeFile.py myFile && ./youtube2mp3 Music
