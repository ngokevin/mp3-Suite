#! /bin/sh
# Downloads .mp3 from YouTube using youtube-dl and ffmpeg
# Supports batch download from regular file 
# Usage: youtube2mp3 -d DOWNLOAD_DIR -t THREAD [ youtube link || list of youtube links ]

# command line arguments to specify directory if desired
download_dir="/home/ngoke/Downloads/Music/youtube2mp3/"
thread=1
while getopts ":d:t:" opt; do
    case $opt in
        d)
            if [ -n $OPTARG ]
            then
                download_dir=$OPTARG
            fi;;
        t)  if [ -n $OPTARG ]
            then
                thread=0
            fi;;
        \?)
            echo "Invalid option: -$OPTARG\n"
            echo "-d: download directory\n"
            exit 1;;
    esac
done
to_convert=${!#}

if [ $# -eq 0 ]
then
    echo "Usage: youtube2mp3 -d DOWNLOAD_DIR -t THREAD [ youtube link || list of youtube links ]"
    exit 1;
fi

# download and convert
function toMP3 {
    
    dir=$download_dir

    # Gets title of video to appropriately name the .mp3 output
    prefix=`youtube-dl -e "$1"`
    suffix=".mp3"
    title=$prefix$suffix
    finaltitle=`(echo $title | sed -E 's/ /_/g')`

    echo "Converting $prefix"

    # Downloads video (.flv)
    x=~/.youtube-dl.$RANDOM-$RANDOM.flv
    youtube-dl --output=$x --format=18 "$1"

    # Convert to .mp3
    ffmpeg -i $x -acodec libmp3lame -ac 2 -ab 128k -vn -y $finaltitle
    rm $x

    mv $finaltitle $dir$finaltitle
    spacetitle=$dir"`(echo $finaltitle | sed 's/_/\\ /g')`"
    mv $dir$finaltitle "$spacetitle"

    if [ -f "$spacetitle" ]
    then
        echo "$prefix converted!"
    else
        echo "Error!"
    fi
}

if [ ! -d $download_dir ];
then
    dir_no_ending_slash=`echo $download_dir | sed s/.$//`
    mkdir $dir_no_ending_slash
fi

# Convert all if batch download file found
if test -f $to_convert 
then   

    echo "$to_convert found"
    
    # Loop through each link in file
    for line in $(cat $to_convert | sort | uniq)
    do
        #Check to see if song does not already exist
        prefix=`youtube-dl -e "$line"`
        suffix=".mp3"
        title=$prefix$suffix
        title="$dir$title"

        echo "Converting $prefix"

        if [ ! -f "$title" ]
        then
            if [ ${thread} -eq 0 ];
            then
                toMP3 $line $download_dir &
            else
                toMP3 $line $download_dir
            fi 
        else
            echo "$prefix$suffix already exists"
        fi
    done

    # Empty file
    cat /dev/null > $to_convert

# Convert if single link given
else
    if [ ${thread} -eq 0 ];
    then
        toMP3 $to_convert $download_dir & 
    else
        toMP3 $to_convert $download_dir 
    fi
fi
exit


